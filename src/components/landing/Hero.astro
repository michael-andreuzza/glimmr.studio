---
import { Image } from "astro:assets";

import Trendspotter from "@/images/trendspotter.png";
import Navy from "@/images/navy.png";
import Spaziobianco from "@/images/spaziobianco.png";
import Phanatik from "@/images/phanatik.png";
import Studiomax from "@/images/studiomax.png";
import ProfolioxLight from "@/images/profolioxLight.png";
import ProfolioxDark from "@/images/profolioxDark.png";
import Outkast from "@/images/outkast.png";
import Author from "@/images/author.png";
import PrimapersonaLight from "@/images/primapersonaLight.png";
import PrimapersonaDark from "@/images/primapersonaDark.png";
import SimplexityLight from "@/images/simplexityLight.png";
import SimplexityDark from "@/images/simplexityDark.png";
import Carbon from "@/images/carbon.png";
import Williamsburg from "@/images/williamsburg.png";
import KoteiLight from "@/images/koteiLight.png";
import KoteiDark from "@/images/koteiDark.png";
import Dusk from "@/images/dusk.png";
import Quartiere from "@/images/quartiere.png";
import Flabbergasted from "@/images/flabbergasted.png";
import Aubergine from "@/images/aubergine.png";
import FlacoLight from "@/images/flacoLight.png";
import FlacoDark from "@/images/flacoDark.png";
import Buio from "@/images/buio.png";
import Alfred from "@/images/alfred.png";
import Hemingway from "@/images/hemingway.png";
import StreamerLight from "@/images/streamerLight.png";
import StreamerDark from "@/images/streamerDark.png";
import Vanta from "@/images/vanta.png";
import Semplice from "@/images/semplice.png";
import Riflesso from "@/images/riflesso.png";
import Carriera from "@/images/carriera.png";
import Brightlight from "@/images/brightlight.png";
import Hirewise from "@/images/hirewise.png";
import Snowpeak from "@/images/snowpeak.png";
import Enlightr from "@/images/enlightr.png";
import Superstore from "@/images/superstore.png";
const themes = [
  { name: "Trendspotter", image: Trendspotter },
  { name: "Spaziobianco", image: Spaziobianco },
  { name: "Phanatik", image: Phanatik },
  { name: "Studiomax", image: Studiomax },
  { name: "ProfolioxLight", image: ProfolioxLight },
  { name: "ProfolioxDark", image: ProfolioxDark },
  { name: "Outkast", image: Outkast },
  { name: "Author", image: Author },
  { name: "PrimapersonaLight", image: PrimapersonaLight },
  { name: "PrimapersonaDark", image: PrimapersonaDark },
  { name: "SimplexityLight", image: SimplexityLight },
  { name: "SimplexityDark", image: SimplexityDark },
  { name: "Carbon", image: Carbon },
  { name: "Williamsburg", image: Williamsburg },
  { name: "KoteiLight", image: KoteiLight },
  { name: "KoteiDark", image: KoteiDark },
  { name: "Dusk", image: Dusk },
  { name: "Quartiere", image: Quartiere },
  { name: "Flabbergasted", image: Flabbergasted },
  { name: "Aubergine", image: Aubergine },
  { name: "FlacoLight", image: FlacoLight },
  { name: "FlacoDark", image: FlacoDark },
  { name: "Buio", image: Buio },
  { name: "Alfred", image: Alfred },
  { name: "Hemingway", image: Hemingway },
  { name: "StreamerLight", image: StreamerLight },
  { name: "StreamerDark", image: StreamerDark },
  { name: "Vanta", image: Vanta },
  { name: "Semplice", image: Semplice },
  { name: "Riflesso", image: Riflesso },
  { name: "Carriera", image: Carriera },
  { name: "Brightlight", image: Brightlight },
  { name: "Hirewise", image: Hirewise },
  { name: "Snowpeak", image: Snowpeak },
  { name: "Enlightr", image: Enlightr },
  { name: "Superstore", image: Superstore },
  { name: "Navy", image: Navy },
];
---

<section class="overflow-x-hidden">
  <div id="keen-slider" class="keen-slider relative">
    {
      themes.map(({ name, image }) => (
        <div class="relative w-full keen-slider__slide py-6 drop-shadow-xl">
          <Image src={image} width={800} height={800} alt={name} />
        </div>
      ))
    }
  </div>
</section>

<section class="relative overflow-hidden">
  <div class="max-w-sm mx-auto w-full shrink-0 py-6 relative">
    <div>
      <svg class="size-8" viewBox="0 0 201 200" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_1_1078)">
        <path d="M170.5 129.496C170.5 168.434 139.16 200 100.5 200C61.8401 200 30.5 168.434 30.5 129.496C30.5 92.6391 66.3392 48.2064 95.6126 6.95421C98.0122 3.57266 103.038 3.53875 105.474 6.89421C135.851 48.7369 170.5 92.5911 170.5 129.496Z" fill="currentColor"/>
        </g>
        <defs>
        <clipPath id="clip0_1_1078">
        <rect width="200" height="200" fill="white" transform="translate(0.5)"/>
        </clipPath>
        </defs>
        </svg>
        
      <h1 class="font-medium mt-8 text-black">Glimmr</h1>
      <p class="text-base-500">
        Landing pages that shine. Designed to convert.
        <br /> Soon, also Framer development.
      </p>

      <!-- Tabs -->
      <div class="mt-12">
        <div class="flex space-x-2 items-center border-b border-neutral-200" id="tabs">
          <button
            class="tab-btn text-neutral-500 py-1  border-b-2 pr-4  w-auto border-transparent "
            data-tab="tab1">Landing page</button
          >
          <button
            class="tab-btn text-neutral-500  w-auto py-1 pr-4  border-b-2 border-transparent"
            data-tab="tab2">Hero section</button
          >
        </div>
        <!-- Tab Panels -->
        <div id="tab-panels" class="mt-4">
         
          <div class="tab-panel " id="tab1">
            <h2 class="font-medium text-black">Landing Page Revamp</h2>
            <p class="text-neutral-500 mt-2">
              A refreshed landing page design that’s clean, on-brand, and built
              to guide users toward action — whether it’s signups, sales, or
              scroll depth.
            </p>
            <p class="font-medium text-black mt-4">Price</p>
            <p class="text-neutral-500 mt-2">$2,000</p>
            <p class="font-medium text-black">What I’ll need from you</p>
            <ul class="list-disc pl-5 text-neutral-500 space-y-2 mt-4">
              <li>Current link or layout of your landing page</li>
              <li>A brief on your goals, brand, and what’s not working</li>
            </ul>
            <p class="font-medium text-black mt-4">What you’ll get</p>
            <ul class="list-disc pl-5 text-neutral-500 space-y-2">
              <li>Figma file with a fully revamped landing page design</li>
              <li>Responsive layouts for desktop, tablet, and mobile</li>
            </ul>
            
          </div>
          <div class="tab-panel hidden" id="tab2">
            <h2 class="font-medium text-black">Hero Section Revamp</h2>
            <p class="text-neutral-500 mt-2">
              A clean redesign of your hero section to help it connect better,
              look sharper, and convert more effectively.
            </p>
            <p class="font-medium text-black mt-4">Price</p>
            <p class="text-neutral-500 mt-2">$200</p>
            <p class="font-medium text-black mt-4">What I’ll need from you</p>
            <ul class="list-disc pl-5 text-neutral-500 space-y-2 mb-4">
              <li>A link or screenshot of your current hero section</li>
              <li>A short brief on what you're aiming for</li>
            </ul>
            <p class="font-medium text-black">What you’ll get</p>
            <ul class="list-disc pl-5 text-neutral-500 space-y-2">
              <li>Figma file of your revamped hero section</li>
              <li>Responsive design: desktop, tablet, and mobile versions</li>
            </ul>
            
          </div>
        </div>
      </div>
      <div class="flex mt-6 pt-6 border-t border-neutral-200">
        <a
          href="https://cal.com/michael-andreuzza/30min"
          class="flex relative text-center font-medium items-center shadow-button justify-center overflow-hidden border border-transparent duration-300 ease-in-out transition-all outline-offset-4 hover:opacity-90 hover:shadow-none focus-visible:outline-none focus:outline-2 inset-shadow-xs inset-shadow-white/10 ring active:inset-shadow-transparent text-white bg-linear-to-r/oklch from-base-900 to-base-950 hover:bg-base-400 focus:outline-base-900 ring-base-900 h-8 px-6 py-2 text-xs rounded-full"
        >
         Book a call
        </a>
      </div>
      <p
        class="indent-8 text-neutral-500 mt-12"
      >
        If you need something small, sharp, and well built — you're in the right
        place. Let’s make your design actually match how good your product is.
      </p>
    </div>
  </div>
</section>
<script>
  const tabButtons = document.querySelectorAll(".tab-btn");
  const tabPanels = document.querySelectorAll(".tab-panel");

  tabButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      const targetTab = btn.getAttribute("data-tab");

      tabButtons.forEach((b) => {
        b.classList.remove("text-black", "border-b-black");
        b.classList.add("text-neutral-500", "border-transparent");
      });

      btn.classList.remove("text-neutral-500", "border-transparent");
      btn.classList.add("text-black", "border-b-black");

      tabPanels.forEach((panel) => {
        panel.classList.toggle("hidden", panel.id !== targetTab);
      });
    });
  });
</script>
<script type="module">
  import KeenSlider from "https://cdn.jsdelivr.net/npm/keen-slider@6.8.6/+esm";
  window.addEventListener("DOMContentLoaded", () => {
    const autoplay = (slider) => {
      let timeout;
      let mouseOver = false;
      function clearNextTimeout() {
        clearTimeout(timeout);
      }
      function nextTimeout() {
        clearTimeout(timeout);
        if (mouseOver) return;
        timeout = setTimeout(() => {
          slider.next();
        }, 500);
      }
      slider.on("created", () => {
        slider.container.addEventListener("mouseover", () => {
          mouseOver = true;
          clearNextTimeout();
        });
        slider.container.addEventListener("mouseout", () => {
          mouseOver = false;
          nextTimeout();
        });
        nextTimeout();
      });
      slider.on("dragStarted", clearNextTimeout);
      slider.on("animationEnded", nextTimeout);
      slider.on("updated", nextTimeout);
    };
    const sliderEl = document.getElementById("keen-slider");
    if (!sliderEl) {
      console.warn("Slider element not found");
      return;
    }
    const keenSlider = new KeenSlider(
      sliderEl,
      {
        loop: true,
        defaultAnimation: {
          duration: 1000,
        },
        detailsChanged: (s) => {
          s.slides.forEach((element, idx) => {
            element.style.opacity = s.track.details.slides[idx].portion;
          });
        },
        slides: {
          origin: "center",
          perView: 1.5,
          spacing: 12,
        },
        breakpoints: {
          "(min-width: 1024px)": {
            slides: {
              origin: "auto",
              perView: 3.5,
              spacing: 24,
            },
          },
        },
      },
      [autoplay]
    );
    const keenSliderPrevious = document.getElementById("keen-slider-previous");
    const keenSliderNext = document.getElementById("keen-slider-next");
    keenSliderPrevious?.addEventListener("click", () => keenSlider.prev());
    keenSliderNext?.addEventListener("click", () => keenSlider.next());
  });
</script>
